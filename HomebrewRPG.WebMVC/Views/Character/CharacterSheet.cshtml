@model HomebrewRPG.Models.CharacterSheetModel

<div class="row">

    <h2>Character Sheet</h2>

    <h3>
        @Html.DisplayFor(modelItem => modelItem.CharacterDetail.CharacterName)
    </h3>

    <div class="tab-sheet">
        <button class="tablinks" onclick="openCity(event, 'character-tab')" id="defaultOpen">Character</button>
        <button class="tablinks" onclick="openCity(event, 'item-tab')">Items</button>
        <button class="tablinks" onclick="openCity(event, 'weapon-tab')">Weapons</button>
        <button class="tablinks" onclick="openCity(event, 'wardrobe-tab')">Wardobe</button>
    </div>

    <div id="character-tab" class="tabcontent row">
        <div class="col-md-4 col-sm-4 padding fancy-text">
            <label>
                @Html.DisplayNameFor(model => model.CharacterDetail.CharacterName)
            </label>
            <p>
                @Html.DisplayFor(modelItem => modelItem.CharacterDetail.CharacterLevel)
            </p>
            <label>
                @Html.DisplayNameFor(model => model.CharacterDetail.Age)
            </label>
            <p>
                @Html.DisplayFor(modelItem => modelItem.CharacterDetail.Age)
            </p>
            <label>
                @Html.DisplayNameFor(model => model.CharacterDetail.Allignment)
            </label>
            <p>
                @Html.DisplayFor(modelItem => modelItem.CharacterDetail.Allignment)
            </p>
            <label>
                @Html.DisplayNameFor(model => model.CharacterDetail.Gender)
            </label>
            <p>
                @Html.DisplayFor(modelItem => modelItem.CharacterDetail.Gender)
            </p>
        </div>
        <div class="col-md-4 col-sm-4 padding fancy-text">
            <label>
                @Html.DisplayNameFor(model => model.CharacterDetail.MagicType)
            </label>
            <p>
                @Html.DisplayFor(modelItem => modelItem.CharacterDetail.MagicType)
            </p>
            <label>
                @Html.DisplayNameFor(model => model.CharacterDetail.ProwessType)
            </label>
            <p>
                @Html.DisplayFor(modelItem => modelItem.CharacterDetail.ProwessType)
            </p>
        </div>
        <div class="col-md-4 col-sm-4">
            <img src="~/Images/FairyTale/png/039-orc.png" class="img-fluid hidden-xs" />
        </div>
    </div>


    <div id="item-tab" class="tabcontent">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items)
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemDescription)
                    </td>
                </tr>
            }
        </table>

    </div>


    <div id="weapon-tab" class="tabcontent">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Weapons)
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Weapons)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.WeaponName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                </tr>
            }
        </table>

    </div>

    <div id="wardrobe-tab" class="tabcontent">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.WardrobeItems)
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.WardrobeItems)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ArmorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                </tr>
            }
        </table>

    </div>
</div>
<script>
    document.getElementById("defaultOpen").click();
    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>
